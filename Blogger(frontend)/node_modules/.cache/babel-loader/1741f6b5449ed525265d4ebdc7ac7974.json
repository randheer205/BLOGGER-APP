{"ast":null,"code":"var _jsxFileName = \"D:\\\\My Files\\\\EMTEC Practice\\\\reactjs\\\\blogs\\\\src\\\\blogs\\\\main_blog.js\",\n    _s = $RefreshSig$();\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { allblogs } from '../services/blog.services';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Blog from \"../components/blog_component\";\nimport getauthor from '../services/user.services';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Main_blog(props) {\n  _s();\n\n  const [rating, setRating] = useState('');\n  const [blogs, setBlogs] = useState('');\n  const nav = useNavigate();\n  useEffect(() => {\n    loadblogs();\n  }, []);\n\n  const loadblogs = async () => {\n    const result = await allblogs();\n\n    if (result) {\n      setBlogs(result);\n    }\n  };\n\n  async function getuser(userId) {\n    const result = await getauthor(userId);\n\n    if (result) {\n      return await getauthor(userId);\n    }\n  }\n\n  const logout = () => {\n    sessionStorage.removeItem('token');\n    nav('/signin');\n  };\n\n  const dispuser = sessionStorage['useremail'];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"header\",\n      style: {\n        fontSize: '22px'\n      },\n      children: \"Get Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      className: \"d-inline mx-2\",\n      autoClose: \"outside\",\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        id: \"dropdown-autoclose-outside\",\n        children: [\"Welcome \", dispuser]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/createblog\",\n            className: \"btn btn-outline-info\",\n            children: \"Create Blog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/updateuser\",\n            className: \"btn btn-outline-info\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-warning\",\n            onClick: logout,\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: blogs.length > 0 && blogs.map(blog => {\n          const {\n            id,\n            blogTitle,\n            blogContent,\n            blogDate,\n            blogTags,\n            userId,\n            comments,\n            user\n          } = blog; //console.log(userId)\n\n          return /*#__PURE__*/_jsxDEV(Blog, {\n            id: id,\n            blogTitle: blogTitle,\n            blogContent: blogContent,\n            blogDate: blogDate,\n            blogTags: blogTags,\n            userId: userId,\n            comments: comments,\n            user: user,\n            getuser: getuser\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 32\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main_blog, \"2PJ50ujfpEWg5MhY0Mu7RcJh5Eo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Main_blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main_blog\");","map":{"version":3,"sources":["D:/My Files/EMTEC Practice/reactjs/blogs/src/blogs/main_blog.js"],"names":["Link","useNavigate","useEffect","useState","allblogs","Dropdown","Blog","getauthor","Main_blog","props","rating","setRating","blogs","setBlogs","nav","loadblogs","result","getuser","userId","logout","sessionStorage","removeItem","dispuser","fontSize","length","map","blog","id","blogTitle","blogContent","blogDate","blogTags","comments","user"],"mappings":"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","sourcesContent":["import {Link,useNavigate} from 'react-router-dom'\r\nimport { useEffect, useState } from 'react'\r\nimport { allblogs } from '../services/blog.services'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport Blog from \"../components/blog_component\"\r\nimport getauthor from '../services/user.services'\r\nexport default function Main_blog(props)\r\n{\r\n    const[rating,setRating]=useState('')\r\n    const[blogs,setBlogs]=useState('')\r\n    const nav=useNavigate()\r\n\r\n    useEffect(()=>{\r\n        loadblogs()\r\n    },[])\r\n\r\n    const loadblogs=async ()=>{\r\n        const result=await allblogs()\r\n        if(result)\r\n        {\r\n            setBlogs(result)\r\n        }\r\n    }\r\n    async function getuser(userId)\r\n    {\r\n        const result=await getauthor(userId)\r\n        if(result)\r\n        {\r\n            return await getauthor(userId)\r\n        }\r\n    }\r\n    const logout=()=>{\r\n        sessionStorage.removeItem('token')\r\n        nav('/signin')\r\n    }\r\n    const dispuser=sessionStorage['useremail']\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"header\" style={{fontSize:'22px'}}>Get Blogs</h1>\r\n            <Dropdown className=\"d-inline mx-2\" autoClose=\"outside\">\r\n                <Dropdown.Toggle id=\"dropdown-autoclose-outside\">\r\n                Welcome {dispuser}\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                <Dropdown.Item ><Link to=\"/createblog\" className=\"btn btn-outline-info\">Create Blog</Link></Dropdown.Item>\r\n                <Dropdown.Item ><Link to=\"/updateuser\" className=\"btn btn-outline-info\">Update Profile</Link></Dropdown.Item>\r\n                <Dropdown.Item ><button className=\"btn btn-outline-warning\" onClick={logout}>Logout</button></Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n            <div className='row'>\r\n                <div>\r\n                    {blogs.length>0 && blogs.map(blog=>{\r\n                        const{id,blogTitle,blogContent,blogDate,blogTags,userId,comments,user}=blog\r\n                        //console.log(userId)\r\n                        return <Blog\r\n                            key={id}\r\n                            id={id}\r\n                            blogTitle={blogTitle}\r\n                            blogContent={blogContent}\r\n                            blogDate={blogDate}\r\n                            blogTags={blogTags}\r\n                            userId={userId}\r\n                            comments={comments}\r\n                            user={user}\r\n                            getuser={getuser}\r\n                        />\r\n                    })}\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}